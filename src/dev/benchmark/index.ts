/* eslint-disable */
/**
 * This file is part of the XEngine.
 * @author William Chan <root@williamchan.me>
 */
// @ts-nocheck
import Benchmark from 'benchmark';
import BSON from 'bson';

// 变量中允许的字符
const ALLOW_CHAR = {
  c0: true,
  c1: true,
  c2: true,
  c3: true,
  c4: true,
  c5: true,
  c6: true,
  c7: true,
  c8: true,
  c9: true,
  ca: true,
  cb: true,
  cc: true,
  cd: true,
  ce: true,
  cf: true,
  cg: true,
  ch: true,
  ci: true,
  cj: true,
  ck: true,
  cl: true,
  cm: true,
  cn: true,
  co: true,
  cp: true,
  cq: true,
  cr: true,
  cs: true,
  ct: true,
  cu: true,
  cv: true,
  cw: true,
  cx: true,
  cy: true,
  cz: true,
  cA: true,
  cB: true,
  cC: true,
  cD: true,
  cE: true,
  cF: true,
  cG: true,
  cH: true,
  cI: true,
  cJ: true,
  cK: true,
  cL: true,
  cM: true,
  cN: true,
  cO: true,
  cP: true,
  cQ: true,
  cR: true,
  cS: true,
  cT: true,
  cU: true,
  cV: true,
  cW: true,
  cX: true,
  cY: true,
  cZ: true,
  c_: true,
  ca0: true,
  ca1: true,
  ca2: true,
  ca3: true,
  ca4: true,
  ca5: true,
  ca6: true,
  ca7: true,
  ca8: true,
  ca9: true,
  caa: true,
  cab: true,
  cac: true,
  cad: true,
  cae: true,
  caf: true,
  cag: true,
  cah: true,
  cai: true,
  caj: true,
  cak: true,
  cal: true,
  cam: true,
  can: true,
  cao: true,
  cap: true,
  caq: true,
  car: true,
  cas: true,
  cat: true,
  cau: true,
  cav: true,
  caw: true,
  cax: true,
  cay: true,
  caz: true,
  caA: true,
  caB: true,
  caC: true,
  caD: true,
  caE: true,
  caF: true,
  caG: true,
  caH: true,
  caI: true,
  caJ: true,
  caK: true,
  caL: true,
  caM: true,
  caN: true,
  caO: true,
  caP: true,
  caQ: true,
  caR: true,
  caS: true,
  caT: true,
  caU: true,
  caV: true,
  caW: true,
  caX: true,
  caY: true,
  caZ: true,
  ca_: true,
  0: true,
  1: true,
  2: true,
  3: true,
  4: true,
  5: true,
  6: true,
  7: true,
  8: true,
  9: true,
  a: true,
  b: true,
  c: true,
  d: true,
  e: true,
  f: true,
  g: true,
  h: true,
  i: true,
  j: true,
  k: true,
  l: true,
  m: true,
  n: true,
  o: true,
  p: true,
  q: true,
  r: true,
  s: true,
  t: true,
  u: true,
  v: true,
  w: true,
  x: true,
  y: true,
  z: true,
  A: true,
  B: true,
  C: true,
  D: true,
  E: true,
  F: true,
  G: true,
  H: true,
  I: true,
  J: true,
  K: true,
  L: true,
  M: true,
  N: true,
  O: true,
  P: true,
  Q: true,
  R: true,
  S: true,
  T: true,
  U: true,
  V: true,
  W: true,
  X: true,
  Y: true,
  Z: true,
  _: true,
  a0: true,
  a1: true,
  a2: true,
  a3: true,
  a4: true,
  a5: true,
  a6: true,
  a7: true,
  a8: true,
  a9: true,
  aa: true,
  ab: true,
  ac: true,
  ad: true,
  ae: true,
  af: true,
  ag: true,
  ah: true,
  ai: true,
  aj: true,
  ak: true,
  al: true,
  am: true,
  an: true,
  ao: true,
  ap: true,
  aq: true,
  ar: true,
  as: true,
  at: true,
  au: true,
  av: true,
  aw: true,
  ax: true,
  ay: true,
  az: true,
  aA: true,
  aB: true,
  aC: true,
  aD: true,
  aE: true,
  aF: true,
  aG: true,
  aH: true,
  aI: true,
  aJ: true,
  aK: true,
  aL: true,
  aM: true,
  aN: true,
  aO: true,
  aP: true,
  aQ: true,
  aR: true,
  aS: true,
  aT: true,
  aU: true,
  aV: true,
  aW: true,
  aX: true,
  aY: true,
  aZ: true,
  a_: true,
};
const suite = new Benchmark.Suite();
const map = new Map();
Object.keys(ALLOW_CHAR).forEach((key) => {
  map.set(key, true);
});

const arr = new ArrayBuffer(100);
const aaa = '1'.repeat(100);

const arrr = [];
for (let index = 0; index < 1; index++) {
  arrr.push({ a: 123, b: true, c: '123', d: { a: 1, b: { a: [1, 2, 3], d: { e: 1, f: {}, g: [3, 4, 5] } } } });
}

const ALLOW_CHAR2 = []

const a = () => {
  // console.log(999)
  if (ALLOW_CHAR2.length) {

  } else {

  }
}

// add tests
suite.add('test1', () => {
  a()
});
suite.add('test2', () => {
  if (ALLOW_CHAR2.length) {

  }
})
// add listeners
  .on('cycle', (event) => {
    console.log(String(event.target));
  })
  .on('complete', function () {
    console.log(`Fastest is ${this.filter('fastest').map('name')}`);
  })
// run async
  .run({ async: true });
